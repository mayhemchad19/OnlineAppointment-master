@model OnlineAppointment.Models.User
@{
    ViewBag.Title = "Create";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    List<SelectListItem> gender = new List<SelectListItem>();
    gender.Add(new SelectListItem
    {
        Text = "Male",
        Value = "Male"
    });
    gender.Add(new SelectListItem
    {
        Text = "Female",
        Value = "Female",

    });



    <div class="panel panel-success" style="margin-top:20px">
        <div class="panel-heading">
            <h3 class="panel-title">Register New User</h3>
        </div>
        <div class="panel-body ">
            <div class="form">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { style = "width: 100%; min-width: 200px;max-width: 280px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { style = "width: 100%; min-width: 200px;max-width: 280px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { style = "width: 100%; min-width: 200px;max-width: 280px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { style = "width: 100%; min-width: 200px;max-width: 280px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, "Gender", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownListFor(model => model.Gender, gender, "--Select Gender--", new { style = "width: 100%; min-width: 200px;max-width: 280px;", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { style = "width: 100%; min-width: 200px;max-width: 280px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { style = "width: 100%; min-width: 200px;max-width: 280px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { style = "width: 100%; min-width: 200px;max-width: 280px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.RoleID, "Role", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("RoleID", null, htmlAttributes: new { style = "width: 100%; min-width: 200px;max-width: 280px;", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.RoleID, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <input type="submit" value="Register" class="btn btn-default" /> | @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
