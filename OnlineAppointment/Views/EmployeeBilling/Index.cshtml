@*@Model Tuple<IEnumerable<SelectListItem>, IEnumerable<SelectListItem>, IEnumerable <SelectListItem>>
    @{
        ViewBag.Title = "Index";
    }*@


<script src="~/Scripts/jquery-3.4.1.min.js"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#Item").val(0)
        $("#Item").change(function () {
            var itemId = $("#Item").val();
            GetItemUnitPrice(itemId);
        });

        $("input[type=text]").change(function () {
            CalculateSubTotal();
        });

        $("input[type=text]").keyup(function () {
            CalculateBalance();
        });

        $("#btnAddToList").click(function () {
            AddToTheItemList();

        });

        $("#btnPayment").click(function () {
            FinalPayment();

        });
        //$("#btnTryt").click(function () {
        //    FinalItemTotal();
        //});
    });

    function FinalPayment() {
        var objOrder = {};
        var ListOfOrderDetail = new Array();
        //OrderDetail
        objOrder.PaymentTypeID = $("#PaymentType").val();
        objOrder.UserID = $("#Customer").val();

        objOrder.FinalTotal = $("#txtFinalTotal").val();

        $("#tblOrderItemList").find("tr:gt(0)").each(function () {
            var OrderDetail = {};
            OrderDetail.Total = parseFloat($(this).find("td:eq(5)").text());
            /* ItemName = (01)*/
            OrderDetail.ProductID = parseFloat($(this).find("td:eq(0)").text());
            OrderDetail.UnitPrice = parseFloat($(this).find("td:eq(2)").text());
            OrderDetail.Quantity = parseFloat($(this).find("td:eq(3)").text());
            OrderDetail.Discount = parseFloat($(this).find("td:eq(4)").text());
            ListOfOrderDetail.push(OrderDetail);

        });
        objOrder.ListOfOrderDetail = ListOfOrderDetail;
        $.ajax({
            async: true,
            type: 'POST',
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(objOrder),
            url: '/EmployeeBilling/Index',


            success: function (data) {
                alert(data);
            },
            error: function () {
                alert("There is some problem in adding the data")
            }
        });
    }

    function CalculateBalance() {
        var FinalAmount = $("#txtPaymentTotal").val();
        var PaymentAmount = $("#txtPaymentAmount").val();
        var ReturnAmount = $("#txtReturnTotal").val();
        var BalanceAmount = parseFloat(FinalAmount) - parseFloat(PaymentAmount) + parseFloat(ReturnAmount);
        $("#txtBalance").val(parseFloat(BalanceAmount).toFixed(2));
        if (parseFloat(BalanceAmount) == 0) {
            $("#btnPayment").removeAttr("disabled");
        }
        else {
            $("#btnPayment").attr("disabled", "disabled");
        }
    }

    function RemoveItem(itemId) {
        $(itemId).closest('tr').remove();
        FinalItemTotal();
        /*FinalItemTotal();*/

    }

    function AddToTheItemList() {
        var tblItemList = $("#tblOrderItemList");

        var UnitPrice = $("#txtUnitPrice").val();
        var Quantity = $("#txtQuantity").val();
        var Discount = $("#txtDiscount").val();
        var ItemId = $("#Item").val();
        var ItemName = $("#Item option:selected").text();

        var Total = (UnitPrice * Quantity) - ((UnitPrice * Quantity) * Discount);


        var ItemList = "<tr> <td hidden>" +
            ItemId + "</td><td>" +
            ItemName + "</td><td>" +
            parseFloat(UnitPrice).toFixed(2) + "</td><td>" +
            parseFloat(Quantity).toFixed(2) + "</td><td>" +
            parseFloat(Discount).toFixed(2) + "</td><td>" +
            parseFloat(Total).toFixed(2) +
            "</td><td> <input type='button' value='Remove' name='remove' id='btnRemove' class='btn btn-danger' onclick='RemoveItem(this)' /> </tr> </tr>";



        tblItemList.append(ItemList);
        FinalItemTotal();
        ResetItem();
    }


    function FinalItemTotal() {
        $("#txtFinalTotal").val("0.00");
        var FinalTotal = 0.00;
        $("#tblOrderItemList").find("tr:gt(0)").each(function () {
            var Total = parseFloat($(this).find("td:eq(5)").text());
            FinalTotal += Total;
        });
        $("#txtFinalTotal").val(parseFloat(FinalTotal).toFixed(2));
        $("#txtPaymentTotal").val(parseFloat(FinalTotal).toFixed(2));
        $("#txtBalance").val(parseFloat(FinalTotal).toFixed(2));
    }

    function ResetItem() {
        $("#txtUnitPrice").val('');
        $("#txtQuantity").val('');
        $("#txtDiscount").val('0.00');
        $("#Item").val(0);
        $("#txtTotal").val("");

    }

    function CalculateSubTotal() {
        var UnitPrice = $("#txtUnitPrice").val();
        var Quantity = $("#txtQuantity").val();
        var Discount = $("#txtDiscount").val();

        var Total = (UnitPrice * Quantity) - ((UnitPrice * Quantity) * Discount);

        $("#txtTotal").val(parseFloat(Total).toFixed(2));

    }

    function GetItemUnitPrice(itemId) {
        $.ajax({
            async: true,
            type: 'GET',
            dataType: 'JSON',
            contentType: 'application/json; charset=utf-8',
            url: '/EmployeeBilling/getItemUnitPrice',
            data: { itemId: itemId },

            success: function (data) {
                $("#txtUnitPrice").val(parseFloat(data).toFixed(2));
            },
            error: function () {
                alert("There is some problem to get the Unit Price")
            }
        });
    }
</script>


<br />
<br />
<style>
    fieldset {
        border: 1px solid #ddd !important;
        margin: 0;
        xmin-width: 0;
        padding: 10px;
        position: relative;
        border-radius: 4px;
        background-color: #f5f5f5;
        padding-left: 10px !important;
    }

    legend {
        font-size: 14px;
        font-weight: bold;
        margin-bottom: 0;
        width: 35%;
        border: 1px solid #ddd;
        border-radius: 4px;
        padding: 5px 5px 5px 10px;
        background-color: #ffffff;
    }
</style>
<fieldset>

    <legend>
        Billing
    </legend>
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    Customer:
                    @Html.DropDownList("Customer", new SelectList(Model.Item1, "Value", "Text"),
                    new { @class = "form-control" })
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    Payment Type:
                    @Html.DropDownList("PaymentType", new SelectList(Model.Item3, "Value", "Text"),
                    new { @class = "form-control" })
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    Total:
                    <input style="text-align:right" type="text" value="0.00" name="FinalTotal" readonly="readonly" id="txtFinalTotal" class="form-control" />
                </div>
            </div>

        </div>
</fieldset>
<fieldset>

    <legend>
        Ordered Items
    </legend>
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    Product:
                    @Html.DropDownList("Item", new SelectList(Model.Item2, "Value", "Text"),
                    new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    Unit Price:
                    <input style="text-align: right" type="text" readonly="readonly" id="txtUnitPrice" value="0.00" name="UnitPrice" class="form-control" />

                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    Quantity:
                    <input style="text-align: right" type="text" id="txtQuantity" value="0.00" name="Quantity" class="form-control" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    Discount:
                    <input style="text-align: right" type="text" id="txtDiscount" value="0.00" name="Discount" class="form-control" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    Total:
                    <input style="text-align: right" type="text" readonly="readonly" id="txtTotal" value="0.00" name="Total" class="form-control" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @*<input type="button" style="margin-top: 20px" value="try" name="try" id="btnTryt" class="btn btn-success" />*@
                    <input type="button" style="margin-top: 20px" value="Add To List" name="AddToList" id="btnAddToList" class="btn btn-success" />
                </div>
            </div>

        </div>
    </div>
</fieldset>
<fieldset>
    <legend>
        Order List Items
    </legend>
    <table style="width: 100%" id="tblOrderItemList">
        <thead>
            <tr>
                <th hidden> Item ID</th>
                <th>
                    Item Name
                </th>
                <th>
                    Unit Price
                </th>
                <th>
                    Quantity
                </th>
                <th>
                    Discount
                </th>
                <th>
                    Total
                </th>
                <th>
                    Action
                </th>
            </tr>
        </thead>
    </table>
</fieldset>

<div style="margin-top: 10px">

    <input data-backdrop="static" data-keydrop="false"
           data-toggle="modal" data-target="#divPayment" style="float:right" type="button" value="Ckeckout" name="checkout" id="btnCheckOut" class="btn btn-primary" />


</div>






<div id="divPayment" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Payment</h4>
            </div>
            <div class="modal-body">
                <div class="container">
                    <div class="row">
                        <div class="form-group col-sm-3">
                            Payment Total:
                            <input style="text-align: right" type="text" id="txtPaymentTotal" readonly="readonly" value="0.00" class="form-control" />
                        </div>
                        <div class="form-group col-sm-3">
                            Payment Amount:
                            <input style="text-align: right" type="text" id="txtPaymentAmount" value="0.00" class="form-control" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="form-group col-sm-3">
                            Return Total:
                            <input style="text-align: right" type="text" id="txtReturnTotal" value="0.00" class="form-control" />
                        </div>
                        <div class="form-group col-sm-3">
                            Balance Amount:
                            <input style="text-align: right" type="text" readonly="readonly" id="txtBalance" value="0.00" class="form-control" />
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button class="btn btn-success" id="btnPayment" value="Payment">Payment</button>
                <button class="btn btn-danger" id="btnClose" data-dismiss="modal" value="close">Close</button>

            </div>
        </div>
    </div>
</div>
