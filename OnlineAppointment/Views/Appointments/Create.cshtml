@model OnlineAppointment.Models.Appointment

@{
    ViewBag.Title = "Create";
}

<br>
<br>
<h2>Set Customer Appointment</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.User.FirstName, "Customer", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("UserID", null, htmlAttributes: new { style = "width: 100%; min-width: 200px;max-width: 280px;", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductID, "Service", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ProductID", null, htmlAttributes: new { style = "width: 100%; min-width: 200px;max-width: 280px;", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AppointmentDate, "Date", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { style = "width: 100%; min-width: 200px;max-width: 280px;", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Slot.Schedule, "Slot", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SlotID", null, htmlAttributes: new { style = "width: 100%; min-width: 200px;max-width: 280px;", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SlotID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { style = "width: 100%; min-width: 200px;max-width: 280px;", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input style="width: 100%; min-width: 200px;max-width: 280px;" , type="submit" value="Set Appointment" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

@*<script type="text/javascript">
    $(function () {
        $("#UserID").chosen();
    });
</script>*@
}


