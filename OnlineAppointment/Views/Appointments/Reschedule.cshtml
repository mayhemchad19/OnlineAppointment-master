@model OnlineAppointment.Models.Appointment

@{
    ViewBag.Title = "Reschedule";
}

<br />
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    List<SelectListItem> status = new List<SelectListItem>();
    status.Add(new SelectListItem
    {
        Text = "Approved",
        Value = "Approved"
    });
    status.Add(new SelectListItem
    {
        Text = "Cancelled",
        Value = "Cancelled",

    });
    status.Add(new SelectListItem
    {
        Text = "No Show",
        Value = "No Show",

    });
    status.Add(new SelectListItem
    {
        Text = "Pending",
        Value = "Pending",

    });
    status.Add(new SelectListItem
    {
        Text = "Settled",
        Value = "Settled",

    });

    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <h3 class="panel-title">Reschedule Appointment Date</h3>
                    </div>
                    <div class="panel-body">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.AppointmentId)

                        <div class="form-group">
                            @Html.LabelFor(model => model.User.FirstName, "Customer", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.AppointmentDate, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.AppointmentDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AppointmentDate, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.SlotID, "Scheduled Time Slot", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownList("SlotID", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SlotID, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, "Status", htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Status, status, "--Select Status--", new { @class = "form-control", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                        <input type="submit" value="Update" class="btn btn-sm btn-success" />
                        <input type="submit" value="Cancel" class="btn btn-sm btn-danger" onclick="@Url.Action("Index","Appointments")" />
                    </div>
                </div>
            </div>
        </div>
    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
